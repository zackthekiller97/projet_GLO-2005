USE projetGlo_bd;
CREATE TABLE IF NOT EXISTS utilisateurs (nomUtilisateur varchar(50), motDePasse varchar(300), roleUtilisateur enum('admin', 'user'));
INSERT INTO utilisateurs VALUES ('zackdev97', "b'$2b$12$UWxQEAVpBm1VTbRuRsVxN.YugcYgclVSRPt.h.iYyta3AaipWBDKe'", 'admin');
INSERT INTO utilisateurs VALUES ('agingras2', "b'$2b$12$uvvkhJV4tx7Av1aZaj1qLuWiO7dl2100kz5j.HLPeIU8VnD88QkDy'", 'admin');
CREATE TABLE IF NOT EXISTS genres (nomGenre varchar(50), PRIMARY KEY(nomGenre));
ALTER TABLE utilisateurs ADD CONSTRAINT pk_utilisateur PRIMARY KEY (nomUtilisateur);
INSERT INTO genres VALUES ('suspense'), ('science-fiction'), ('policier'), ('drame'), ('horreur'), ('aventure'), ('comédie'), ('fantaisie'), ('documentaire'), ('romance'), ('action'), ('comédie musicale');
CREATE TABLE IF NOT EXISTS films (idFilm integer, nomFilm varchar(100), annee YEAR, genre varchar(50), sousGenre varchar(50), acteurs longtext, nbVotes integer, noteTotale integer, noteGlobale integer, PRIMARY KEY(idFilm), FOREIGN KEY (genre) REFERENCES genres(nomGenre) ON DELETE SET NULL, FOREIGN KEY (sousGenre) REFERENCES genres(nomGenre) ON DELETE SET NULL);
CREATE TABLE IF NOT EXISTS series (idSerie integer, nomSerie varchar(100), annee YEAR, genre varchar(50), sousGenre varchar(50), acteurs longtext, nbVotes integer, noteTotale integer, noteGlobale integer, saison integer, PRIMARY KEY(idSerie), FOREIGN KEY (genre) REFERENCES genres(nomGenre) ON DELETE SET NULL, FOREIGN KEY (sousGenre) REFERENCES genres(nomGenre) ON DELETE SET NULL);
CREATE TABLE IF NOT EXISTS commentairesFilms (id integer, contenu longtext, PRIMARY KEY(id));
CREATE TABLE IF NOT EXISTS commentairesSeries (id integer, contenu longtext, PRIMARY KEY(id));
CREATE TABLE IF NOT EXISTS votesFilms (id integer, nomUtilisateur varchar(50), idFilm integer, note integer, PRIMARY KEY(id), UNIQUE(nomUtilisateur, idFilm), FOREIGN KEY (nomUtilisateur) REFERENCES utilisateurs(nomUtilisateur) ON DELETE CASCADE, FOREIGN KEY (idFilm) REFERENCES films(idFilm) ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS votesSeries (id integer, nomUtilisateur varchar(50), idSerie integer, note integer, PRIMARY KEY(id), UNIQUE(nomUtilisateur, idSerie), FOREIGN KEY (nomUtilisateur) REFERENCES utilisateurs(nomUtilisateur) ON DELETE CASCADE, FOREIGN KEY (idSerie) REFERENCES series(idSerie) ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS acteurs (id integer, prenom varchar(100), nom varchar(100), ddn DATE, sexe enum('masculin', 'feminin', 'non-binaire'), nationnalite varchar(100), PRIMARY KEY(id));
ALTER TABLE films MODIFY COLUMN noteTotale double;
ALTER TABLE films MODIFY COLUMN noteGlobale double;
ALTER TABLE series MODIFY COLUMN noteTotale double;
ALTER TABLE series MODIFY COLUMN noteGlobale double;
ALTER TABLE votesFilms MODIFY COLUMN note double;
ALTER TABLE votesSeries MODIFY COLUMN note double;
INSERT INTO films VALUES (1, 'Prisoners', 2013, 'policier', 'suspense', 'Hugh Jackman, Jake Gyllenhaal, Viola Davis, Maria Bello, Terrence Howard, Melissa Leo', 1, 7.8, 7.8);
INSERT INTO films VALUES (2, 'Girl in the basement', 2021, 'policier', 'drame', 'Stefanie Scott, Judd Nelson, Joely Fisher, Emily Topper, Emma Myers, Braxton Bjerken', 1, 9.2, 9.2);
INSERT INTO genres VALUES ('super-hero');
INSERT INTO films VALUES (3, 'Guardians of the galaxy vol. 3', 2023, 'super-hero', 'science-fiction', 'Chris Pratt, Zoe Saldana, Dave Bautista, Karen Gillan, Pom Klementieff, Vin Diesel', 1, 9.0, 9.0);
INSERT INTO genres VALUES ('animation');
INSERT INTO films VALUES (4, 'Turning red', 2022, 'animation', 'comédie', 'Rosalie Chiang, Sandra Oh, Ava Morse, Hyein Park, Maitreyi Ramakrishnan, Orion Lee', 1, 8.3, 8.3);
INSERT INTO films VALUES (5, 'Room', 2015, 'drame', 'policier', 'Brie Larson, Jacob Tremblay, Joan Allen, Sean Bridgers, Tom McCamus, William H. Macy', 1, 8.4, 8.4);
INSERT INTO films VALUES (6, 'Things heard & seen', 2021, 'suspense', 'horreur', "Amanda Seyfried, James Norton, Natalia Dyer, Karen Allen, Rhea Seehorn, Michael O'Keefe", 1, 2.0, 2.0);
INSERT INTO films VALUES (7, 'Baywatch', 2017, 'comédie', 'action', 'Dwayne Johnson, Zac Efron, Priyanka Chopra Jonas, Alexandra Daddario, Kelly Rohrbach, Jon Bass', 1, 8.5, 8.5);
INSERT INTO genres VALUES ('psychologique');
INSERT INTO films VALUES (8, 'Shutter island', 2010, 'suspense', 'psychologique', 'Leonardo DiCaprio, Mark Ruffalo, Ben Kingsley, Max von Sydow, Michelle Williams, Emily Mortimer', 1, 8.0, 8.0);
INSERT INTO films VALUES (9, 'Arrival', 2016, 'science-fiction', 'psychologique', "Amy Adams, Jeremy Renner, Forest Whitaker, Michael Stuhlbarg, Mark O'Brien, Tzi Ma", 1, 8.1, 8.1);
INSERT INTO films VALUES (10, 'After', 2019, 'romance', 'drame', 'Josephine Langford, Hero Fiennes Tiffin, Pia Mia, Inanna Sarkis, Samuel Larsen, Dylan Arnold', 1, 3.0, 3.0);
INSERT INTO votesFilms VALUES (1, 'zackdev97', 1, 7.8);
INSERT INTO votesFilms VALUES (2, 'zackdev97', 2, 9.2);
INSERT INTO votesFilms VALUES (3, 'zackdev97', 3, 9.0);
INSERT INTO votesFilms VALUES (4, 'zackdev97', 4, 8.3);
INSERT INTO votesFilms VALUES (5, 'zackdev97', 5, 8.4);
INSERT INTO votesFilms VALUES (6, 'zackdev97', 6, 2.0);
INSERT INTO votesFilms VALUES (7, 'zackdev97', 7, 8.5);
INSERT INTO votesFilms VALUES (8, 'zackdev97', 8, 8.0);
INSERT INTO votesFilms VALUES (9, 'zackdev97', 9, 8.1);
INSERT INTO votesFilms VALUES (10, 'zackdev97', 10, 3.0);
INSERT INTO series VALUES (1, 'Percy Jackson and the Olympians', 2023, 'fantaisie', 'aventure', 'Walker Scobell, Leah Jeffries, Aryan Simhardi', 1, 8.8, 8.8, 1);
INSERT INTO series VALUES (2, 'Ted', 2024, 'comédie', 'comédie', 'Seth MacFarlane, Max Burkholder, Alanna Ubach, Scott Grimes, Giorgia Wigham', 1, 8.6, 8.6, 1);
INSERT INTO series VALUES (3, 'Dark', 2017, 'suspense', 'science-fiction', 'Oliver Masucci, Karoline Eichhorn, Jordis Triebel, Louis Hofmann, Maja Schone, Stephan Kampwirth', 1, 9.5, 9.5, 1);
INSERT INTO series VALUES (4, 'Dark', 2019, 'suspense', 'science-fiction', 'Oliver Masucci, Karoline Eichhorn, Jordis Triebel, Louis Hofmann, Maja Schone, Stephan Kampwirth', 1, 9.4, 9.4, 2);
INSERT INTO series VALUES (5, 'Dark', 2020, 'suspense', 'science-fiction', 'Oliver Masucci, Karoline Eichhorn, Jordis Triebel, Louis Hofmann, Maja Schone, Stephan Kampwirth', 1, 9.5, 9.5, 3);
INSERT INTO series VALUES (6, 'Stranger Things', 2016, 'suspense', 'fantaisie', 'Winnona Ryder, David Harbour, Millie Bobby Brown, Finn Wolfhard, Gaten Matarazzo, Caleb McLaughlin', 1, 9.4, 9.4, 1);
INSERT INTO series VALUES (7, 'Stranger Things', 2017, 'suspense', 'fantaisie', 'Winnona Ryder, David Harbour, Millie Bobby Brown, Finn Wolfhard, Gaten Matarazzo, Caleb McLaughlin', 1, 9.0, 9.0, 2);
INSERT INTO series VALUES (8, 'Stranger Things', 2019, 'suspense', 'fantaisie', 'Winnona Ryder, David Harbour, Millie Bobby Brown, Finn Wolfhard, Gaten Matarazzo, Caleb McLaughlin', 1, 9.4, 9.4, 3);
INSERT INTO series VALUES (9, 'Stranger Things', 2022, 'suspense', 'fantaisie', 'Winnona Ryder, David Harbour, Millie Bobby Brown, Finn Wolfhard, Gaten Matarazzo, Caleb McLaughlin', 1, 9.5, 9.5, 4);
INSERT INTO series VALUES (10, 'Avatar: The Last Airbender', 2024, 'fantaisie', 'aventure', 'Gordon Cormier, Kiawentiio Tarbell, Ian Ousley, Dallas Liu, Paul Sun-Hyung Lee, Ken Leung', 1, 8.7, 8.7, 1);
INSERT INTO votesSeries VALUES (1, 'zackdev97', 1, 8.8);
INSERT INTO votesSeries VALUES (2, 'zackdev97', 2, 8.6);
INSERT INTO votesSeries VALUES (3, 'zackdev97', 3, 9.5);
INSERT INTO votesSeries VALUES (4, 'zackdev97', 4, 9.4);
INSERT INTO votesSeries VALUES (5, 'zackdev97', 5, 9.5);
INSERT INTO votesSeries VALUES (6, 'zackdev97', 6, 9.4);
INSERT INTO votesSeries VALUES (7, 'zackdev97', 7, 9.0);
INSERT INTO votesSeries VALUES (8, 'zackdev97', 8, 9.4);
INSERT INTO votesSeries VALUES (9, 'zackdev97', 9, 9.5);
INSERT INTO votesSeries VALUES (10, 'zackdev97', 10, 8.7);
ALTER TABLE commentairesFilms ADD CONSTRAINT fk_id FOREIGN KEY (id) REFERENCES votesFilms(id) ON DELETE CASCADE;
ALTER TABLE commentairesSeries ADD CONSTRAINT fk_sid FOREIGN KEY (id) REFERENCES votesSeries(id) ON DELETE CASCADE;
